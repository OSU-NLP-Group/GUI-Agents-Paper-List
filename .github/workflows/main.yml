name: Update README with Sorted Papers Content

on:
  push:
    paths:
      - 'update_template_or_data/update_paper_list.md'         # 监听 update_paper_list.md 文件的更新
      - 'update_template_or_data/utils/scripts/sort_by_date.py'   # 监听 update_template_or_data/utils/scripts/sort_by_date.py 脚本的更新
      - 'update_template_or_data/update_readme_template.md'   # 监听 update_template_or_data/utils/scripts/sort_by_date.py 脚本的更新
      - '.github/workflows/main.yml'
  # schedule:
  #   - cron: '0 0 * * *'     # 每天定时运行（0点）

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python environment
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'  # 使用最新的 Python 版本

      - name: Install dependencies
        run: |
          pip install pandas matplotlib seaborn wordcloud

      - name: Run update_template_or_data/utils/scripts/sort_by_date.py
        run: |
          python update_template_or_data/utils/scripts/sort_by_date.py
          
      - name: Generate keyword grouping and update temp_readme.md
        run: |
          # Initialize the Markdown table
          GROUPED_KEYWORDS="|"
          ROW_COUNT=0

          for file in paper_by_key/*.md; do
            # Extract and encode the keyword for display and URL
            KEYWORD=$(basename "$file" .md | sed 's/^paper_//' | tr '_' ' ')
            ENCODED_KEYWORD=$(echo "$KEYWORD" | sed 's/ /%20/g')
            LINK="[${KEYWORD^}](paper_by_key/$(basename "$file" | sed 's/ /%20/g'))"

            # Add to the table
            GROUPED_KEYWORDS+="$LINK |"
            ROW_COUNT=$((ROW_COUNT + 1))

            # Break line after 5 columns
            if [ $((ROW_COUNT % 5)) -eq 0 ]; then
              GROUPED_KEYWORDS+="\n|--------------------------------|--------------------------------|--------------------------------|--------------------------------|--------------------------------|\n|"
            fi
          done

          # Pad the last row if necessary
          if [ $((ROW_COUNT % 5)) -ne 0 ]; then
            for i in $(seq $((5 - ROW_COUNT % 5))); do
              GROUPED_KEYWORDS+=" |"
            done
            GROUPED_KEYWORDS+="\n|--------------------------------|--------------------------------|--------------------------------|--------------------------------|--------------------------------|"
          fi

          # Insert the table into the template
          sed -i '/{{insert_keyword_groups_here}}/{
            r /dev/stdin
            d
          }' update_template_or_data/update_readme_template.md <<< "$GROUPED_KEYWORDS"

      - name: Update temp_readme.md with sorted papers content
        run: |
          # 读取更新后的 update_template_or_data/update_paper_list.md 内容
          CONTENT=$(cat update_template_or_data/update_paper_list.md)
          
          # 使用 sed 插入 content 到 temp_readme.md 的占位符位置
          sed -i '/{{insert_all_papers_here}}/{
            r /dev/stdin
            d
          }' update_template_or_data/update_readme_template.md <<< "$CONTENT"




      - name: Overwrite README.md with updated temp_readme.md
        run: |
          # 覆盖 README.md
          cp update_template_or_data/update_readme_template.md README.md

      - name: Commit changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add README.md 
          git add paper_by_env 
          git add paper_by_author 
          git add paper_by_key
          
          git add update_template_or_data/statistics
          git commit -m "auto updates by github workflow"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
